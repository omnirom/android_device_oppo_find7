#
# Copyright 2012 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import init.oppo.usb.rc
import init.common.rc

on early-init
# LVM: set up LVM volumes
    #First wait for the physical volumes to be available.  Init appears to
    #start before the MMC driver comes up and creates the block devices
    wait /dev/block/platform/msm_sdcc.1/by-name/userdata
    wait /dev/block/platform/msm_sdcc.1/by-name/sdcard
    #Scan for LVM partitions.  Our lvm.conf restricts this to the userdata and sdcard partitions
    exec_context u:r:lvm:s0 /sbin/lvm vgscan --mknodes --ignorelockingfailure
    #Activate any partitions found
    exec_context u:r:lvm:s0 /sbin/lvm vgchange -aly --ignorelockingfailure
    #Detect if LVM is active and copy the appropriate fstabs and environment RCs for
    #the detected configuration.  See the script source for details
    #Requires busybox to be added to the initial ramdisk of the kernel
    setcon u:r:lvm:s0
    exec /sbin/static/busybox sh /lvm_init.sh
    setcon u:r:init:s0

on fs
    #This will safely error out on non-lvm configs
    restorecon /dev/mapper/lvpool-userdata

on early-boot
    #Last phase of LVM configuration.  setprop requires property service
    #to be started so we can't put it in lvm_init.sh
    #Currently we're using the system shell as /system is mounted,
    #but this may need to be reworked to use toolbox+sh to support
    #recovery
    exec /system/bin/sh /lvm_setprop.sh
